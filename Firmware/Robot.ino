//
// Robot.ino
//

#define BUS_SPEED 1000  // 1Mbaud

void robot_init()
{
    CAN.begin();
    CAN.baudConfig(BUS_SPEED);
    CAN.setMode(NORMAL);

    // Wait a second so that I can still upload even
    // if the previous iteration spams the serial port
    delay(100);
    robot_initNode(0x01);
}

void robot_initNode(byte node)
{
    robot_velocityMode(node);
    robot_motorPowerOn(node);
    robot_motorStart(node);
    robot_setMotorSpeed(node, 0);
}

void robot_velocityMode(byte node)
{
    Serial.println("=== Motor Velocity Mode");
    byte cmd[3][8] = {
        {0x2B, 0x40, 0x60, 0x00, 0x0F, 0x00, 0x00, 0x00},  // CONTROLWORD RES:0 RES:0 RES:0 RES:0 RES:0 RES:0 MS5:0 HAT:0 FTR:0 MS3:0 MS2:0 MS1:0 ENO:1 QUS:1 ENV:1 SWO:1
        {0x40, 0x41, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00},  // STATUSWORD
        {0x2F, 0x60, 0x60, 0x00, 0x02, 0x00, 0x00, 0x00}   // MODE OF OPERATION
    };

    for (int i = 0; i < 3; i++)
    {
        robot_command(node, 0x600, cmd[i]);
    }
}

void robot_motorPowerOn(byte node)
{
    Serial.println("=== Motor Power on");
    byte cmd[6][8] = {
        {0x40, 0x41, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x2B, 0x40, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00},
        {0x2B, 0x40, 0x60, 0x00, 0x07, 0x00, 0x00, 0x00},
        {0x40, 0x41, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x2B, 0x40, 0x60, 0x00, 0x0F, 0x00, 0x00, 0x00},
        {0x40, 0x41, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00}
    };

    for (int i = 0; i < 6; i++)
    {
        robot_command(node, 0x600, cmd[i]);
    }
}

void robot_motorStart(byte node)
{
    Serial.println("=== Motor Start");
    byte cmd[13][8] = {
        {0x40, 0x41, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x40, 0x40, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x23, 0x46, 0x60, 0x01, 0x00, 0x00, 0x00, 0x00},
        {0x23, 0x46, 0x60, 0x02, 0xA8, 0x61, 0x00, 0x00},
        {0x2B, 0x40, 0x60, 0x00, 0x0F, 0x01, 0x00, 0x00},
        {0x2B, 0x42, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x23, 0x48, 0x60, 0x01, 0x20, 0x4E, 0x00, 0x00},
        {0x2B, 0x48, 0x60, 0x02, 0x01, 0x00, 0x00, 0x00},
        {0x23, 0x49, 0x60, 0x01, 0x20, 0x4E, 0x00, 0x00},
        {0x2B, 0x49, 0x60, 0x02, 0x01, 0x00, 0x00, 0x00},
        {0x23, 0x4A, 0x60, 0x01, 0xA0, 0x86, 0x01, 0x00},
        {0x2B, 0x4A, 0x60, 0x02, 0x01, 0x00, 0x00, 0x00},
        {0x2B, 0x40, 0x60, 0x00, 0x0F, 0x00, 0x00, 0x00}
    };

    for (int i = 0; i < 13; i++)
    {
        robot_command(node, 0x600, cmd[i]);
    }
}

void robot_setMotorSpeed(byte node, int speed)
{
    Serial.print("=== Motor Speed: "); Serial.println(speed);

    byte lowNibble = speed;
    byte highNibble = speed >> 8;

    byte cmd[8] = {0x2B, 0x42, 0x60, 0x00, lowNibble, highNibble, 0x00, 0x00};
    robot_command(node, 0x600, cmd);
}

void robot_quickStop(byte node)
{
    Serial.println("=== Motor Quickstop");
    byte cmd[5][8] = {
        {0x40, 0x40, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x2B, 0x40, 0x60, 0x00, 0x0F, 0x01, 0x00, 0x00},
        {0x40, 0x40, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x2B, 0x40, 0x60, 0x00, 0x0B, 0x01, 0x00, 0x00},
        {0x2B, 0x40, 0x60, 0x00, 0x0F, 0x01, 0x00, 0x00}
    };

    for (int i = 0; i < 5; i++)
    {
        robot_command(node, 0x600, cmd[i]);
    }
}

void robot_command(byte node, unsigned short COB, byte data[8])
{
    CAN.load_ff_0(8, COB + node, data);
    CAN.send_0();
    delay(10);

    for (int i = 0; i < 8; i++)
    {
        Serial.print(data[i], HEX);
        Serial.print(" ");
    }
    Serial.println();
}
